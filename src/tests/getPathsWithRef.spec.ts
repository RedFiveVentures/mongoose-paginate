import {getPathsWithRef} from "../utils/getPathsWithRef";

const data = [{"enumValues":[],"regExp":null,"path":"firstName","instance":"String","validators":[{"message":"Path `{PATH}` is required.","type":"required"}],"getters":[],"setters":[null],"_presplitPath":["firstName"],"options":{"required":true,"trim":true},"_index":null,"isRequired":true,"originalRequiredValue":true}
    ,{"enumValues":[],"regExp":null,"path":"lastName","instance":"String","validators":[{"message":"Path `{PATH}` is required.","type":"required"}],"getters":[],"setters":[null],"_presplitPath":["lastName"],"options":{"required":true,"trim":true},"_index":null,"isRequired":true,"originalRequiredValue":true}
    ,{"enumValues":[],"regExp":null,"path":"email","instance":"String","validators":[],"getters":[],"setters":[null,null],"_presplitPath":["email"],"options":{"unique":true,"lowercase":true,"trim":true},"_index":{"unique":true,"background":true}}
    ,{"enumValues":[],"regExp":null,"path":"c.child.str","instance":"String","validators":[],"getters":[],"setters":[],"_presplitPath":["c","child","str"],"options":{"selected":false},"_index":null}
    ,{"path":"c.child.grandchild","options":{"type":{"obj":{"test":{"select":false}},"paths":{"test":{"enumValues":[],"regExp":null,"path":"test","instance":"String","validators":[],"getters":[],"setters":[],"_presplitPath":["test"],"options":{"select":false},"_index":null,"selected":false},"_id":{"path":"_id","instance":"ObjectId","validators":[],"getters":[],"setters":[null],"_presplitPath":["_id"],"options":{"auto":true,"type":"ObjectId"},"_index":null}},"aliases":{},"subpaths":{},"virtuals":{"id":{"path":"id","getters":[null],"setters":[],"options":{}}},"singleNestedPaths":{},"nested":{},"inherits":{},"callQueue":[],"_indexes":[],"_searchIndexes":[],"methods":{},"methodOptions":{},"statics":{},"tree":{"test":{"select":false},"_id":{"auto":true,"type":"ObjectId"},"id":{"path":"id","getters":[null],"setters":[],"options":{}}},"query":{},"childSchemas":[],"plugins":[{"opts":{"deduplicate":true}},{"opts":{"deduplicate":true}},{"opts":{"deduplicate":true}},{"opts":{"deduplicate":true}},{"opts":{"deduplicate":true}}],"$id":1,"mapPaths":[],"encryptedFields":{},"s":{"hooks":{"_pres":{},"_posts":{}}},"_userProvidedOptions":{},"options":{"strict":true,"strictQuery":false,"bufferCommands":true,"capped":false,"versionKey":"__v","optimisticConcurrency":false,"minimize":true,"autoIndex":null,"discriminatorKey":"__t","shardKey":null,"read":null,"validateBeforeSave":true,"validateModifiedOnly":false,"_id":true,"id":true,"typeKey":"type"},"$globalPluginsApplied":true}}}
    ,{"enumValues":[],"regExp":null,"path":"biography","instance":"String","validators":[{"message":"Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length (2000).","type":"maxlength","maxlength":2000}],"getters":[],"setters":[],"_presplitPath":["biography"],"options":{"select":false,"maxlength":2000},"_index":null,"selected":false}
    ,{"path":"birthDate","instance":"Date","validators":[],"getters":[],"setters":[],"_presplitPath":["birthDate"],"options":{},"_index":null}
    ,{"enumValues":[],"regExp":null,"path":"nationality","instance":"String","validators":[],"getters":[],"setters":[null],"_presplitPath":["nationality"],"options":{"trim":true},"_index":null}
    ,{"enumValues":[],"regExp":null,"path":"website","instance":"String","validators":[],"getters":[],"setters":[null],"_presplitPath":["website"],"options":{"trim":true},"_index":null}
    ,{"enumValues":[],"regExp":null,"path":"socialMedia.twitter","instance":"String","validators":[],"getters":[],"setters":[],"_presplitPath":["socialMedia","twitter"],"options":{},"_index":null}
    ,{"enumValues":[],"regExp":null,"path":"socialMedia.instagram","instance":"String","validators":[],"getters":[],"setters":[],"_presplitPath":["socialMedia","instagram"],"options":{},"_index":null}
    ,{"enumValues":[],"regExp":null,"path":"socialMedia.facebook","instance":"String","validators":[],"getters":[],"setters":[],"_presplitPath":["socialMedia","facebook"],"options":{},"_index":null}
    ,{"schemaOptions":{"strict":true,"strictQuery":false,"bufferCommands":true,"capped":false,"versionKey":"__v","optimisticConcurrency":false,"minimize":true,"autoIndex":null,"discriminatorKey":"__t","shardKey":null,"read":null,"validateBeforeSave":true,"validateModifiedOnly":false,"_id":true,"id":true,"typeKey":"type","timestamps":true,"toJSON":{"virtuals":true},"toObject":{"virtuals":true},"pluralization":true},"caster":{"path":"books","instance":"ObjectId","validators":[],"getters":[],"setters":[],"_presplitPath":["books"],"options":{"ref":"Book"},"_index":null,"_arrayPath":"books.$","_arrayParentPath":"books"},"$embeddedSchemaType":{"path":"books","instance":"ObjectId","validators":[],"getters":[],"setters":[],"_presplitPath":["books"],"options":{"ref":"Book"},"_index":null,"_arrayPath":"books.$","_arrayParentPath":"books"},"$isMongooseArray":true,"path":"books","instance":"Array","validators":[],"getters":[],"setters":[],"_presplitPath":["books"],"options":{"type":[{"ref":"Book"}]},"_index":null}
    ,{"path":"book","instance":"ObjectId","validators":[],"getters":[],"setters":[],"_presplitPath":["book"],"options":{"ref":"Book"},"_index":null}
    ,{"path":"isActive","instance":"Boolean","validators":[],"getters":[],"setters":[],"_presplitPath":["isActive"],"options":{"default":true},"_index":null,"defaultValue":true}
    ,{"path":"_id","instance":"ObjectId","validators":[],"getters":[],"setters":[null],"_presplitPath":["_id"],"options":{"auto":true,"type":"ObjectId"},"_index":null}
    ,{"path":"createdAt","instance":"Date","validators":[],"getters":[],"setters":[null,null],"_presplitPath":["createdAt"],"options":{"immutable":true},"_index":null,"$immutable":true}
    ,{"path":"updatedAt","instance":"Date","validators":[],"getters":[],"setters":[],"_presplitPath":["updatedAt"],"options":{},"_index":null}
    ,{"path":"__v","instance":"Number","validators":[],"getters":[],"setters":[],"_presplitPath":["__v"],"options":{},"_index":null}
]


describe('getPathsWithRef', () => {
    it('returns correct values', () => {
        const results =  getPathsWithRef(data)

    })
})